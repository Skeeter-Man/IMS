@page "/addinventory"

@inject IAddInventoryUseCase AddInventoryUserCase
@inject NavigationManager NavigationManager

<h3>Add Inventory</h3>
<br />

<EditForm Model="inventory" FormName="formInventory" OnValidSubmit="Save">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="name">Inventory Name</label>
        <InputText id="name"
                   @bind-Value="inventory.InventoryName"
                   class="form-control">
        </InputText>
        <ValidationMessage For="() => inventory.InventoryName" />
    </div>

    <div class="form-group">
        <label for="quantity">Quantity</label>
        <InputNumber id="name"
                     @bind-Value="inventory.Quantity"
                     class="form-control">
        </InputNumber>
        <ValidationMessage For="() => inventory.Quantity" />
    </div>

    <div class="form-group">
        <label for="price">Price</label>
        <InputNumber id="name"
                     @bind-Value="inventory.Price"
                     class="form-control">
        </InputNumber>
        <ValidationMessage For="() => inventory.Price" />
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Save</button>
    &nbsp;
    <a href="/inventories" class="btn btn-warning">Cancel</a>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private Inventory inventory { get; set; } = new Inventory();

    public async Task Save()
    {
        await AddInventoryUserCase.ExecuteAsync(inventory);
        NavigationManager.NavigateTo("/inventories");
    }
}
