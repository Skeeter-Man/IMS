@page "/addproduct"

@rendermode InteractiveServer

@inject IAddProductUseCase AddProductUseCase
@inject NavigationManager NavigationManager

<h3>Add Product</h3>
<br />

<EditForm Model="product"  OnValidSubmit="Save">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="name">Product Name</label>
        <InputText id="name"
                   @bind-Value="product.ProductName"
                   class="form-control">
        </InputText>
        <ValidationMessage For="() => product.ProductName" />
    </div>

    <div class="form-group">
        <label for="quantity">Quantity</label>
        <InputNumber id="name"
                     @bind-Value="product.Quantity"
                     class="form-control">
        </InputNumber>
        <ValidationMessage For="() => product.Quantity" />
    </div>

    <div class="form-group">
        <label for="price">Price</label>
        <InputNumber id="name"
                     @bind-Value="product.Price"
                     class="form-control">
        </InputNumber>
        <ValidationMessage For="() => product.Price" />
    </div>

    <div class="form-group">
        <label for="inventories">Inventories</label>
        <ProductsInventoriesComponent Product="this.product" />
    </div>

    <br />
    <button type="submit" class="btn btn-primary">Save</button>
    &nbsp;
    <a href="/products" class="btn btn-warning">Cancel</a>
</EditForm>

@code {
    private Product product { get; set; } = new Product();

    public async Task Save()
    {
        await AddProductUseCase.ExecuteAsync(product);
        NavigationManager.NavigateTo("/products");
    }
}
